buildscript {
    repositories {
        jcenter()
        google()
//        mavenLocal()
        maven { url "file://${projectDir.absolutePath}/../build/localMaven" }
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.10'
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.5.10'
        classpath 'com.codingfeline.kgql:gradle-plugin:+'
    }
}

apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.codingfeline.kgql'

repositories {
    jcenter()
    google()
//    mavenLocal()
    maven { url "file://${projectDir.absolutePath}/../build/localMaven" }
}

kotlin {
    jvm()
    js(IR) {
        browser()
        nodejs()
    }
    ios {
        binaries {
            framework()
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.2.1"
            }
        }
        jvmMain {
            dependencies {
            }
        }
        jsMain {
            dependencies {
            }
        }
        iosMain {
            dependencies {
            }
        }
    }
}

kgql {
    packageName = "com.codingfeline.kgql.sample"
    sourceSet = files("src/main/kgql")
}

// Workaround for https://youtrack.jetbrains.com/issue/KT-36721.
// Put this snippet into your root buildscript.
allprojects {
    pluginManager.withPlugin("kotlin-multiplatform") {
        def uniqueName = "${project.group}.${project.name}".toString()

        project.kotlin.targets.withType(org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTarget.class) {
            compilations["main"].kotlinOptions.freeCompilerArgs += ["-module-name", uniqueName]
        }
    }
}